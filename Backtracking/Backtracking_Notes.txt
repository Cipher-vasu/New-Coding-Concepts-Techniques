Backtracking algorithm is applied to some specific types of problems:-
1. Decision problem used to find a feasible solution of the problem.
2. Optimisation problem used to find the best solution that can be applied.
3. Enumeration problem used to find the set of all feasible solutions of the problem.

General Template for BackTracking Problems:-

void dfs(arguments) {
	if (condition == true) { // Condition when we should stop our exploration.
		result.push_back(current);
		return;
	}
	for (int i = num; i <= last; i++) {
		current.push_back(i); // Explore candidate.
		dfs(arguments);
		current.pop_back();   // Abandon candidate.
	}
}

In Backtracking problems if the elements of are distinct then we can use set for solving the problem. But if there are duplicates present of some elements then we can use map and each time we add any element to our possible candidate we will decrese its frequency in map and make the function call. For more clarity refer to Permutations II problem on Leetcode.


